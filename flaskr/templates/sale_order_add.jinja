{% extends "home.jinja" %}
{% block title %}Item{% endblock %}
{% block content %}
<div style="margin: 10PX;">
    <button class="button" id="add-btn">Add</button>
    <button class="button" id="send-btn">Send</button>
    <div style="display: flex; margin:10px; flex-direction:column">
        <label for="member-id">Member</label>
        <select class="nes-select" id="member-id">
            {%for member in members%}
            <option value="{{member.id}}">{{member.name}}</option>
            {%endfor%}
        </select>
        <label for="staff-id">Staff</label>
        <select class="nes-select" id="staff-id">
            {%for staff in staffs%}
            <option value="{{staff.staff_id}}">{{staff.name}}</option>
            {%endfor%}
        </select>
    </div>
    <div class="nes-table responsive">
        <table class="nes-table is-bordered" id="item-table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Type</th>
                    <th>Quantity</th>
                    <th>Delete</th>
                </tr>
            </thead>
            <tbody id="item-list">
            </tbody>
        </table>
    </div>
</div>
<dialog class="nes-dialog" id="item_add">
    <form method="dialog" style="display:flex; flex-direction:column">
        <p class="title">Add Item</p>
        <select id="name-and-type" style="margin-bottom: 20px;">
            {%for item in items%}
            {%if item.stock > 0 and item.unit_price is number %}
            <option value='{"name":"{{item.name}}","type":"{{item.type}}","quantity":{{item.stock}}}'>
                name:{{item.name}} type:{{item.type}}</option>
            {%endif%}
            {%endfor%}
        </select>
        <p>Quantity do not exceed</p>
        <p id="max-quantity"></p>
        <label>Quantity</label>
        <input type="number" id="item-quantity" class="nes-input" min="0" />
        <menu class="dialog-menu">
            <button  id="ok-btn">OK</button>
            <button  is-primary" id="cancel-btn">Cancel</button>
        </menu>
    </form>
</dialog>
</body>
<script>
    $(document).ready(function () {
        function set_add_item_dialog() {
            const item = JSON.parse($("#name-and-type").val());
            if(item.quantity){
                $("#max-quantity").html(item.quantity);
                $("#item-quantity").attr("max", item.quantity);
            }else{
                $("#max-quantity").html("0");
                $("#item-quantity").attr("max", 0);
            }
        }
        $("#add-btn").click(function () {
            set_add_item_dialog();
            $("#item-quantity").val(0);
            $("#item_add").show();
        });
        $("#cancel-btn").click(function () {
            $("#item_add").hide();
        });

        $("#name-and-type").change(function () {
            set_add_item_dialog();
        })
        $("#ok-btn").click(function () {
            $("#item_add").hide();
            const item_datas = JSON.parse($("#name-and-type").val());
            const tmp_quantity = 0;
            if (item_datas.quantity ) {
                tmp_quantity = item_datas.quantity;
            }
            const quantity = $("#item-quantity").val();
            if (quantity > tmp_quantity ) {
                alert("Quantity exceed");
                return;
            } else if (quantity == 0) {
                alert("Quantity cannot be 0");
                return;
            }

            const item = "<tr style='text-align: center;'><td>" + item_datas.name + "</td><td>" + item_datas.type + "</td><td>" + quantity + "</td><td><button class='nes-btn removeRowBtn'>Delete</button></td></tr>";
            $("#item-list").append(item);
        })
        $('#item-table').on('click', '.removeRowBtn', function () {
            // Find the closest table row and remove it
            $(this).closest('tr').remove();
        });

        $("#send-btn").click(function () {
            const data = {
                member_id: $("#member-id").val(),
                staff_id: $("#staff-id").val(),
                item_list: []
            }
            $("#item-list tr").each(function () {
                const item = {
                    name: $(this).find("td").eq(0).html(),
                    type: $(this).find("td").eq(1).html(),
                    quantity: $(this).find("td").eq(2).html()
                }
                data.item_list.push(item);
            })
            if (data.item_list.length == 0) {
                alert("Please add at least one item");
                return;
            }
            const response = fetch("/sale_order", {
                method: "POST",
                body: JSON.stringify(data),
                headers: {
                    "Content-Type": "application/json"
                }
            }).then(function (response) {
                response.json().then(function (data) {
                    if (data.message) {
                        alert(data.message);
                        window.location.href = "/myErp/sale_order";
                    } else {
                        alert(data.error);
                        window.location.reload();
                    }
                })
            })
        })

    });
</script>
{%endblock content%}